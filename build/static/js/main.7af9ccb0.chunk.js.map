{"version":3,"sources":["components/Card.jsx","components/Cards.jsx","components/SearchBar.jsx","components/Navbar.jsx","data.js","App.js","index.js"],"names":["Container","styled","div","Temp","TempContainer","Tittle","h4","Boton","button","BotonContainer","Imagen","img","Card","props","name","onClick","onClose","id","Math","floor","min","max","src","alt","Cards","ciudades","cities","map","city","main","temp_min","temp_max","weather","icon","Texto","input","SearchBar","onSearch","useState","textState","setText","clickButton","event","key","url","fetch","then","respuesta","json","catch","alert","value","type","placeholder","onChange","evento","target","onKeyDown","NavBar","H1","h1","Cairns","JSON","parse","App","setCities","className","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7af9ccb0.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  background-color: #f6f2d4;\n  flex-direction: column;\n  align-items: center;\n  margin: 10px;\n  width: 300px;\n  height: 195px;\n  border: 5px solid #5584ac;\n  border-radius: 5px;\n  font-family: \"Roboto Slab\", serif;\n  animation: aparecer 1s ease;\n  @keyframes aparecer {\n    0% {\n      opacity: 0;\n      transform: scale(0);\n    }\n    100% {\n      opacity: 1;\n      transform: scale(1);\n    }\n  }\n  -webkit-box-shadow: 16px 11px 24px 1px rgba(34, 87, 126, 0.41);\n  -moz-box-shadow: 16px 11px 24px 1px rgba(34, 87, 126, 0.41);\n  box-shadow: 16px 11px 24px 1px rgba(34, 87, 126, 0.41);\n`;\n\nconst Temp = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 10px 15px;\n  font-weight: 400;\n`;\n\nconst TempContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst Tittle = styled.h4`\n  font-size: 25px;\n  font-weight: 600;\n  padding-top: 5px;\n  color: #f6f2d4;\n  width: 300px;\n`;\n\nconst Boton = styled.button`\n  background-color: red;\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n  color: #f6f2d4;\n  width: 1.5em;\n  height: 1.5em;\n  border-radius: 4px;\n  margin-right: 5px;\n  margin-top: -13px;\n  margin-left: -30px;\n  padding-top: 20px;\n`;\n\nconst BotonContainer = styled.div`\n  background-color: #5584ac;\n  display: flex;\n  border-top-left-radius: 5px;\n  border-top-right-radius: 5px;\n  align-items: center;\n  flex-direction: row;\n  justify-content: flex-end;\n  width: 300px;\n  margin-top: -1px;\n`;\n\nconst Imagen = styled.img`\n  margin-top: -20px;\n`;\n\nexport default function Card(props) {\n  return (\n    <Container>\n      <BotonContainer>\n        <Tittle>{props.name}</Tittle>\n        <Boton onClick={() => props.onClose(props.id)}>\n          <span>x</span>\n        </Boton>\n      </BotonContainer>\n      <TempContainer>\n        <Temp>\n          <span>Temp. minima</span>\n          <span>{Math.floor(props.min)}ยบ</span>\n        </Temp>\n        <Temp>\n          <span>Temp. maxima</span>\n          <span>{Math.floor(props.max)}ยบ</span>\n        </Temp>\n      </TempContainer>\n      <Imagen\n        src={`http://openweathermap.org/img/wn/${props.img}@2x.png`}\n        alt=\"card-img\"\n      />\n    </Container>\n  );\n}\n","import React from \"react\";\nimport Card from \"./Card\";\nimport styled from \"styled-components\";\n\nexport default function Cards(props) {\n  const ciudades = props.cities;\n\n  const Container = styled.div`\n    width: 100%;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    padding: 0px 50px 0px 50px;\n  `;\n\n  const nuevo = styled.div`\n    background-color: red;\n  `;\n\n  if (props.cities) {\n    return (\n      <nuevo>\n        <Container>\n          {ciudades.map((city) => (\n            <Card\n              name={city.name}\n              min={city.main.temp_min}\n              max={city.main.temp_max}\n              img={city.weather[0].icon}\n              onClose={props.onClose}\n              key={city.id}\n              id={city.id}\n            />\n          ))}\n        </Container>\n      </nuevo>\n    );\n  } else {\n    return <div>Sin ciudades</div>;\n  }\n}\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  box-sizing: border-box;\n  font-family: \"Roboto Slab\", serif;\n  width: 30%;\n  height: 30px;\n  margin-left: 50px;\n`;\n\nconst Texto = styled.input`\n  margin-right: 25px;\n  border-radius: 5px;\n  background-color: #f6f2d4;\n`;\n\nconst Boton = styled.button`\n  background-color: #5584ac;\n  border-radius: 5px;\n  color: white;\n  border: 1px solid green;\n  transition: transform 0.5s;\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport default function SearchBar({ onSearch }) {\n  const [textState, setText] = useState(\"\");\n\n  const changeText = (evento) => {\n    setText(evento.target.value);\n  };\n\n  const clickButton = (event) => {\n    if (event.key !== \"Enter\") {\n      return;\n    }\n    const apiKey = \"4ae2636d8dfbdc3044bede63951a019b\";\n    const url = `http://api.openweathermap.org/data/2.5/weather?q=${textState}&appid=${apiKey}&units=metric`;\n    fetch(url)\n      .then((respuesta) => respuesta.json())\n      .then((json) => {\n        onSearch(json);\n      })\n      .catch(() => alert(\"Error.. ciudad no encontrada\"));\n  };\n\n  return (\n    <Container>\n      <Texto\n        value={textState}\n        type=\"text\"\n        placeholder=\"Buscar...\"\n        onChange={changeText}\n        onKeyDown={clickButton}\n      />\n      <Boton onClick={clickButton}>Agregar</Boton>\n      <hr />\n    </Container>\n  );\n}\n","import React from \"react\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default function NavBar({ onSearch }) {\r\n  const Container = styled.div`\r\n    background-color: #22577e;\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n    height: 90px;\r\n    margin: 1em;\r\n    border-bottom: 2px solid #22577e80;\r\n    margin-top: 0px;\r\n  `;\r\n\r\n  const H1 = styled.h1`\r\n    margin-left: 50px;\r\n    color: #faedf0;\r\n    font-family: \"Roboto Slab\", serif;\r\n    font-weight: 600;\r\n  `;\r\n\r\n  return (\r\n    <Container>\r\n      <H1>Weather App</H1>\r\n      <SearchBar onSearch={onSearch}></SearchBar>\r\n    </Container>\r\n  );\r\n}\r\n","export const Cairns = JSON.parse(`{\"coord\":{\"lon\":145.77,\"lat\":-16.92},\"weather\":[{\"id\":802,\"main\":\"Clouds\",\"description\":\"scattered clouds\",\"icon\":\"03n\"}],\"base\":\"stations\",\"main\":{\"temp\":300.15,\"pressure\":1007,\"humidity\":74,\"temp_min\":300.15,\"temp_max\":300.15},\"visibility\":10000,\"wind\":{\"speed\":3.6,\"deg\":160},\"clouds\":{\"all\":40},\"dt\":1485790200,\"sys\":{\"type\":1,\"id\":8166,\"message\":0.2064,\"country\":\"AU\",\"sunrise\":1485720272,\"sunset\":1485766550},\"id\":2172797,\"name\":\"Cairns\",\"cod\":200}`);\n\nexport const Londres = JSON.parse(`{\"coord\":{\"lon\":-0.13,\"lat\":51.51},\"weather\":[{\"id\":300,\"main\":\"Drizzle\",\"description\":\"light intensity drizzle\",\"icon\":\"09d\"}],\"base\":\"stations\",\"main\":{\"temp\":280.32,\"pressure\":1012,\"humidity\":81,\"temp_min\":279.15,\"temp_max\":281.15},\"visibility\":10000,\"wind\":{\"speed\":4.1,\"deg\":80},\"clouds\":{\"all\":90},\"dt\":1485789600,\"sys\":{\"type\":1,\"id\":5091,\"message\":0.0103,\"country\":\"GB\",\"sunrise\":1485762037,\"sunset\":1485794875},\"id\":2643743,\"name\":\"London\",\"cod\":200}`);\n\nexport const Denver = JSON.parse(`{\"coord\":{\"lon\":-0.13,\"lat\":51.51},\"weather\":[{\"id\":300,\"main\":\"Drizzle\",\"description\":\"light intensity drizzle\",\"icon\":\"09d\"}],\"base\":\"stations\",\"main\":{\"temp\":280.32,\"pressure\":1012,\"humidity\":81,\"temp_min\":12.12,\"temp_max\":121},\"visibility\":10000,\"wind\":{\"speed\":4.1,\"deg\":80},\"clouds\":{\"all\":90},\"dt\":1485789600,\"sys\":{\"type\":1,\"id\":5091,\"message\":0.0103,\"country\":\"GB\",\"sunrise\":1485762037,\"sunset\":1485794875},\"id\":5419384,\"name\":\"Denver\",\"cod\":200}`);\n\nvar cities = [Londres, Cairns, Denver];\n\nexport default cities;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Card from \"./components/Card.jsx\";\nimport Cards from \"./components/Cards.jsx\";\nimport SearchBar from \"./components/SearchBar.jsx\";\nimport NavBar from \"./components/Navbar\";\nimport data, { Cairns } from \"./data.js\";\nimport styled from \"styled-components\";\n\nfunction App() {\n  const [cities, setCities] = useState([]);\n\n  function onSearch(city) {\n    setCities((cities) => [...cities, city]);\n  }\n\n  function onClose(id) {\n    setCities((cities) => cities.filter((city) => id !== city.id));\n  }\n\n  return (\n    <div className=\"App\">\n      <NavBar onSearch={onSearch} />\n      <Cards cities={cities} onClose={onClose} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}